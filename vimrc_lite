" Vimrc file, 
" adopted from http://phuzz.org
" modified by Vivek Sardeshmukh
" evolved over years and years during my grad school

set nocompatible    " use vim defaults

" Vundle and YCM 
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
  Plugin 'VundleVim/Vundle.vim'
  Plugin 'scrooloose/nerdtree'
  Plugin 'tpope/vim-unimpaired'
call vundle#end()
filetype off
filetype plugin indent on
augroup filetypedetect
   au BufNewFile,BufRead *@@/*
    \ if expand("<afile>") =~ '@@' |
    \ exe "doau filetypedetect BufRead " . expand("<afile>:s?@@.*$??") |
    \ endif
 augroup END

autocmd BufNewFile,BufRead *@@/* set filetype=cpp
autocmd BufNewFile,BufRead *.C set filetype=cpp

" Vivek's preferences
set ls=2            " allways show status line 
set tabstop=4       " numbers of spaces of tab character
set shiftwidth=4    " numbers of spaces to (auto)indent
set expandtab
set softtabstop=4
set scrolloff=3     " keep 3 lines when scrolling
set showcmd         " display incomplete commands
set hlsearch        " highlight searches
set incsearch       " do incremental searching
set ruler           " show the cursor position all the time
set visualbell t_vb=    " turn off error beep/flash
set novisualbell    " turn off visual bell
set nobackup        " do not keep a backup file
set number          " show line numbers
set ignorecase      " ignore case when searching
"set noignorecase   " don't ignore case
"set title           " show title in console title bar
set ttyfast         " smoother changes
"set ttyscroll=0        " turn off scrolling, didn't work well with PuTTY
set modeline        " last lines in document sets vim mode
set modelines=3     " number lines checked for modelines
set shortmess=atI   " Abbreviate messages
set nostartofline   " don't jump to first character when paging
set whichwrap=b,s,h,l,<,>,[,]   " move freely between files
"set viminfo='20,<50,s10,h
set tags=./tags,tags,/vobs/ua/MHV/Compiler/tags
set nocst           "disable cstags 
"set autoindent     " always set autoindenting on
"set smartindent        " smart indent
"set cindent            " cindent
set noautoindent
set nosmartindent
set nocindent  

"spell check
set nospell
"set autowrite      " auto saves changes when quitting and swiching buffer
"set expandtab      " tabs are converted to spaces, use only when required
set sm             " show matching braces, somewhat annoying...
"set nowrap         " don't wrap lines

syntax on           " syntax highlighing

filetype plugin on  " vim-latex plugin settings below 
let g:tex_flavor='pdflatex'
let g:Tex_DefaultTargetFormat='pdf'
let g:Tex_CompileRule_pdf='pdflatex -interaction=nonstopmode $*'  
let g:Tex_ViewRule_pdf='evince' 
let g:Tex_FoldedEnvironments='tikzpicture, column, verbatim,comment,eq,gather,align,figure,table,thebibliography,keywords,abstract,titlepage,solution,proof,algorithm'
let g:Tex_MultipleCompileFormats='pdf, aux'
"disable vim-latex shortcuts
let g:Imap_FreezeImap=1

if has("autocmd")
    " Restore cursor position
    au BufReadPost * if line("'\"") > 0|if line("'\"") <= line("$")|exe("norm '\"")|else|exe "norm $"|endif|endif

    " Filetypes (au = autocmd)
    au FileType helpfile set nonumber      " no line numbers when viewing help
    au FileType helpfile nnoremap <buffer><cr> <c-]>   " Enter selects subject
    au FileType helpfile nnoremap <buffer><bs> <c-T>   " Backspace to go back
    
    " When using mutt, text width=72
    au FileType txt  set textwidth=80
    au FileType tex  set spell
    au FileType mail set textwidth=72
    au FileType cpp,c,C,java,sh,pl,php,asp,tcl,py  set autoindent
    au FileType cpp,c,C,java,sh,pl,php,asp,tcl,py  set list 
    au FileType cpp,c,C,java,sh,pl,php,asp,tcl,py  set listchars=tab:>-
    au FileType cpp,c,C,java,sh,pl,php,asp,tcl,py  set smartindent
    au FileType cpp,c,C,java,sh,pl,php,asp,tcl  set cindent
    au FileType java  set complete=.,w,b,u,t,i
    au FileType cpp,c,C,qel,tcl  set foldmethod=indent 
    "au FileType java  set foldmethod=indent 
    
    autocmd BufRead *.py set smartindent cinwords=if,elif,else,for,while,try,except,finally,def,class
    autocmd BufRead *.py set nocindent
    autocmd BufWritePre *.py normal m`:%s/\s\+$//e ``
    au FileType py set tabstop=4 
    au FileType py set shiftwidth=4, 
    au FileType py set smarttab 
    au FileType py set expandtab 
    au FileType py set softtabstop=4 
    au FileType py set autoindent   
    au FileType py set foldmethod=indent    
    "au BufRead mutt*[0-9] set tw=72
    
    " Automatically chmod +x Shell and Perl scripts and python 
    au BufWritePost   *.sh             !chmod +x %
    au BufWritePost   *.pl             !chmod +x %
    "au BufWritePost  *.py   !chmod +x %

    " File formats
    au BufNewFile,BufRead  *.pls    set syntax=dosini
    au BufNewFile,BufRead  modprobe.conf    set syntax=modconf
endif
"for .nc files
augroup filetypedetect
  au! BufRead,BufNewFile *nc setfiletype nc
augroup END

" let g:pymode_rope_lookup_project = 0

filetype indent on

au FileType java setlocal tabstop=2
" Keyboard mappings
"turn off highlighted search
map <silent> <C-N> :silent noh<CR> 

map <F6> <Esc>:setlocal spell spelllang=en_gb<CR>
map <F7> <Esc>:setlocal nospell<CR> 
nmap <silent> <C-Up> :wincmd k<CR>
nmap <silent> <C-Down> :wincmd j<CR>
nmap <silent> <C-Left> :wincmd h<CR>
nmap <silent> <C-Right> :wincmd l<CR>

" move splits when using mac
nmap ˙ <C-w><Left>
nmap ¬ <C-w><Right>
nmap ˚ <C-w><Up>
nmap ∆ <C-w><Down> 

" ctags.vim setting - to show function name in status bar
let g:ctags_path = '/usr/bin/ctags'
let g:ctags_statusline = 1
let generate_ctags = 1
let g:ctags_regenerate = 0 " disable regeneration
nmap <F2> :CTAGS<CR>
nmap ,t :!(cd %:p:h;ctags *.[cCh])&

set backspace=indent,eol,start 

" nerdTree
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif 
autocmd VimEnter * if argc() == 1 && isdirectory(argv()[0]) && !exists("s:std_in") | exe 'NERDTree' argv()[0] | wincmd p | ene | endif 
map <C-n> :NERDTreeToggle<CR>

" tagbar
let g:tabgar_ctags_bin = '/grid/common/pkgs/ctags/v5.8/bin' 
nmap <F9> :TagbarToggle<CR>

set clipboard=unnamedplus
set nowrap

